{"version":3,"sources":["components/Layout/images/my-sprouts_icon.svg","components/Layout/images/search_icon.svg","components/Layout/images/alerts_icon.svg","components/Layout/images/leaderboard_icon.svg","components/Layout/NavBar.js","components/Layout/Layout.js","components/AboutUs/AboutUsList.js","containers/AboutUs/AboutUsPage.js","containers/AboutUs/index.js","containers/AboutUs/AboutUsContainer.js","config/assets/icons/x.svg","config/assets/icons/sprout-shadow-light.svg","components/Alerts/SproutTip.js","config/assets/icons/water-icon-circle.svg","components/Alerts/WaterAlerts.js","config/assets/gifs/planty-dance.gif","containers/Alerts/AlertsPage.js","containers/Alerts/index.js","containers/Alerts/AlertsContainer.js","components/Leaderboard/TopFive.js","components/Leaderboard/LeaderboardTogglers.js","containers/Leaderboards/LeaderboardPage.js","containers/Leaderboards/index.js","containers/Leaderboards/LeaderboardContainer.js","components/Layout/images/sprout_logo.png","Splash.js","containers/Login/Login.js","containers/Login/index.js","containers/Login/LoginContainer.js","containers/Signup/Signup.js","containers/Signup/index.js","containers/Signup/SignupContainer.js","config/assets/images/soil.jpg","config/assets/images/water.jpg","config/assets/images/sunshine.jpg","containers/JoinTeam/JoinTeam.js","containers/JoinTeam/index.js","containers/JoinTeam/JoinTeamContainer.js","components/Profile/SproutItem.js","components/Profile/SproutGallery.js","components/Profile/SocialIcons.js","components/Profile/ProfilePictureModal.js","components/Profile/Scorebar.js","config/assets/icons/addbutton.svg","components/Modals/AddPlantModal.js","components/Profile/Welcome.js","containers/Profile/ProfilePage.js","containers/Profile/ProfileContainer.js","containers/Profile/index.js","config/assets/icons/big-leaf.svg","config/assets/icons/water-can-slim.svg","components/PlantProfile/PlantInfo.js","components/PlantProfile/PlantNotes.js","config/assets/icons/dig_up.svg","components/PlantProfile/DigUp.js","config/assets/icons/water_icon.svg","components/PlantProfile/WaterPlant.js","components/PlantProfile/PlantProfilePicture.js","components/PlantProfile/PlantProfileTopOptions.js","config/assets/icons/seed.svg","components/PlantProfile/PlantDateAdded.js","config/assets/icons/pen.svg","components/PlantProfile/EditPlant.js","config/assets/icons/back_button.svg","containers/PlantProfile/PlantProfilePage.js","containers/PlantProfile/index.js","containers/PlantProfile/PlantProfileContainer.js","components/Search/SearchItems.js","components/Search/SearchBar.js","components/Search/NoResults.js","containers/Search/SearchPage.js","containers/Search/index.js","containers/Search/SearchContainer.js","config/assets/icons/star.svg","config/assets/icons/flower.svg","config/assets/icons/fruit.svg","components/SearchPlantDetail/DetailCards.js","containers/SearchPlantDetail/SearchPlantDetailPage.js","containers/SearchPlantDetail/index.js","containers/SearchPlantDetail/SearchPlantDetailContainer.js","reportWebVitals.js","config/assets/images/Corgiswimflipflip.jpg","config/assets/images/bork_bork_nom_nom.gif","components/Easter/EasterEgg.js","index.js"],"names":["NavBar","Navbar","activekey","fixed","id","Nav","Item","to","className","src","SproutsIcon","alt","SearchIcon","AlertsIcon","LeaderboardsIcon","initialState","userId","username","name","profilePicture","team","points","sprouts","UserContext","createContext","SproutContext","Layout","children","useState","user","setUser","setSprouts","Provider","value","window","location","pathname","defaultProps","TeamList","members","map","member","AboutUs","teamMembers","href","Button","type","AboutUsContainer","SproutTip","tips","random_tip","Math","floor","random","length","sproutTipIcon","closeBtn","onClick","document","getElementById","remove","WaterAlert","plants","setAlerts","useContext","waterPlant","plant_id","a","Axios","put","sessionStorage","getItem","user_sprouts_id","then","res","currSprout","filter","sprout","sproutId","wateredSprout","lastWatered","data","updatedSprout","user_sprouts_last_watered","sproutIndex","findIndex","updatedSprouts","alerts","plant","waterIcon","AlertsPage","alertPlants","setAlertPlants","useEffect","getAlerts","post","sproutTips","plantyDance","AlertsContainer","TopFive","topfive","player","LeaderboardTogglers","teams","style","backgroundImage","backgroundRepeat","height","width","borderRadius","display","justifyContent","backgroundSize","fontSize","LeaderboardPage","topFiveUsers","setTopFiveUsers","teamsData","teamPoints","setTeamPoints","getTeamPoints","getTopFiveUsers","get","sort","b","parseInt","LeaderboardContainer","Splash","sproutLogo","Spinner","animation","role","defaults","withCredentials","schema","yup","shape","required","password","withRouter","props","splash","setSplash","validation","setValidation","setTimeout","validationSchema","onSubmit","values","userName","initialValues","handleSubmit","handleChange","touched","errors","Form","Group","controlId","Label","Control","placeholder","onChange","marginBottom","color","variant","LoginContainer","Signup","inputUsername","setUsername","inputPassword","setPassword","userExistValidation","setUserExistValidation","defaultValue","e","target","setItem","alert","SignupContainer","JoinTeam","chosenPreferredName","setChosenPreferredName","selectedTeam","setSelectedTeam","htmlFor","soil","water","sunshine","preferredName","JoinTeamContainer","SproutItem","SproutGallery","Container","fluid","Row","SocialIcons","TwitterShareButton","url","TwitterIcon","size","round","FacebookShareButton","quote","FacebookIcon","ProfilePictureModal","prefName","setPrefNameDisplay","authUser","show","setShow","handleClose","profilePic","setProfilePic","userPrefName","setUserPrefName","imageSelected","setImageSelected","editProfile","imageData","FormData","append","res1","secure_url","newUserPrefName","newProfilePic","application_user_image","application_user_preferred_name","Modal","onHide","centered","Header","closeButton","Title","Body","File","label","event","files","Footer","Scorebar","AddPlantModal","family","img_url","history","useHistory","submitForm","catch","err","console","log","notes","wateringInterval","imageUrl","i","sproutObject","dateAdded","user_sprouts_date_added","user_sprouts_family","user_sprouts_given_name","user_sprouts_notes","user_sprouts_type","user_sprouts_watering_intervals","user_sprouts_image","application_user_id","push","status","addButton","min","as","rows","Welcome","ProfilePage","userContext","setPoints","setDisplay","userPrefNameDisplay","getSprouts","ProfileContainer","sproutState","userSprouts","PlantInfo","wateredDate","leaf","watercan","PlantNotes","plantNotes","DigUp","DigUpButton","fetch","method","response","error","index","splice","removeSproutFromContext","WaterPlant","updateLastWatered","waterDiffDays","wateringPlant","newLastWateredDate","newSproutWithLastWatered","finally","WaterButton","PlantProfilePicture","toggler","setToggler","sources","PlantProfileTopOptions","seed","EditPlant","updateSproutPage","inputSproutName","setSproutName","inputFamily","setFamily","inputType","setType","inputWateringInterval","setWateringInterval","inputNotes","setNotes","selectedSproutPic","setSelectedSproutPic","editSprout","uploadRes","EditButton","PlantProfilePage","sproutParam","useParams","thisSprout","setThisSprout","setLastWatered","diffDays","setDiffDays","getLastWateredDate","date","diffInDays","today","Date","lastWateredDate","diffInTime","getTime","getDiffDay","BackButton","substring","PlantProfileContainer","SearchItem","plantData","PLANT_ID","title","split","charAt","toUpperCase","slice","includes","SearchBar","inputKeyword","updateInputKeyword","NoResults","SearchPage","input","setInput","searchPlantData","plantList","setPlantList","input_keyword","filterList","PLANT_COMMON_NAME","toLowerCase","SearchContainer","DetailCards","plantInfo","star","flower","fruit","SearchPlantDetailPage","plantId","thisPlant","backbutton","firstName","firstCommonName","SearchPlantDetailContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","EasterEgg","corgi","corgiStill","App","path","component","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0866adaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/my-sprouts_icon.1c679c46.svg\";","export default __webpack_public_path__ + \"static/media/search_icon.8e792740.svg\";","export default __webpack_public_path__ + \"static/media/alerts_icon.fbc22f2f.svg\";","export default __webpack_public_path__ + \"static/media/leaderboard_icon.b46df244.svg\";","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link } from \"react-router-dom\";\nimport SproutsIcon from \"./images/my-sprouts_icon.svg\";\nimport SearchIcon from \"./images/search_icon.svg\";\nimport AlertsIcon from \"./images/alerts_icon.svg\";\nimport LeaderboardsIcon from \"./images/leaderboard_icon.svg\";\nimport \"./styles.css\";\n\nconst NavBar = () => {\n  return (\n    <Navbar activekey=\"/profile\" fixed=\"bottom\" id=\"bottom-nav\">\n      <Nav.Item>\n        <Link to=\"/profile\" className=\"bottom-nav-link\">\n          <img src={SproutsIcon} className=\"bottom-nav-icon\" alt=\"\"/>\n          <p>My Sprouts</p>\n        </Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Link to=\"/search\" className=\"bottom-nav-link\">\n          <img src={SearchIcon} className=\"bottom-nav-icon\" alt=\"\"/>\n          <p>Search</p>\n        </Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Link to=\"/alerts\" className=\"bottom-nav-link\">\n          <img src={AlertsIcon} className=\"bottom-nav-icon\" alt=\"\"/>\n          <p>Alerts</p>\n        </Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Link to=\"/leaderboards\" className=\"bottom-nav-link\">\n          <img src={LeaderboardsIcon} className=\"bottom-nav-icon\" alt=\"\"/>\n          <p>Leaderboards</p>\n        </Link>\n      </Nav.Item>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React, { createContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NavBar from \"./NavBar\";\n\n// const userInitialValue = {\n//   userId: 0,\n//   teamId: 0,\n//   username: '',\n//   password: '',\n//   name: '',\n//   profilePicture:'',\n//   team: 0,\n//   points: 0,\n//   sprouts: []\n// }\nconst initialState = {\n  user: {\n    userId: 0,\n    username: \"\",\n    name: \"\",\n    profilePicture: \"\",\n    team: 0,\n    points: 0,\n    sprouts: [],\n  },\n  sprouts: [],\n};\n// UserContext\nexport const UserContext = createContext();\n\n// SproutContext\nexport const SproutContext = createContext();\nconst Layout = ({ children }) => {\n  const [user, setUser] = useState(initialState.user);\n  const [sprouts, setSprouts] = useState(initialState.sprouts);\n  return (\n    <UserContext.Provider value={[user, setUser]}>\n        <SproutContext.Provider value={[sprouts, setSprouts]}>\n          {window.location.pathname === \"/asdfasdfasdfasdfsadfsafdasdf\" ? (\n            <div className=\"easterEgg\">{children}</div>\n          ) : (\n            <div className=\"appContent\">{children}</div>\n          )}\n          {window.location.pathname !== \"/\" &&\n          window.location.pathname !== \"/signup\" &&\n          window.location.pathname !== \"/join-team\" &&\n          window.location.pathname !== \"/about-us\" &&\n          window.location.pathname !== \"/asdfasdfasdfasdfsadfsafdasdf\" ? (\n            <NavBar />\n          ) : null}\n        </SproutContext.Provider>\n    </UserContext.Provider>\n  );\n};\n\nLayout.defaultProps = {\n  children: null,\n};\n\nLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Layout;\n","// ====================================\n//            IMPORTS\n// ====================================\n\n// React\nimport React from 'react';\n\nimport {Link} from 'react-router-dom';\n\n// ====================================\n//          REACT COMPONENT\n// ====================================\n\n/**\n * Return a list of components using the list of member objects.\n * @param {Array} members - array of member objects.\n * @returns - each object in members as a component.\n */\n\nconst TeamList = ({members}) => {\n\n    return members.map(member => {\n\n      return(\n\n        <div className=\"member-container\" key={member[\"id\"]}>\n          {(member[\"name\"] === 'Patrick Guichon') ? \n          <Link to='/asdfasdfasdfasdfsadfsafdasdf'>\n            <img className=\"about-us-avatar\" src={member[\"img\"]} alt={member[\"name\"]}/>\n          </Link>\n          :\n          <img className=\"about-us-avatar\" src={member[\"img\"]} alt={member[\"name\"]}/>\n    }\n          <div className=\"member-description\">\n          <h3>{member[\"name\"]}</h3>\n\n          {member[\"position\"]}\n          \n          <p><span className=\"about-us-my-sprout\">My Sprout: {member[\"plant\"]}</span>\n          <br/>\n          <br/>\n          {member[\"about\"]}</p>\n          </div>\n        </div>\n\n      )\n\n    });\n\n}; \n\nexport default TeamList;","// ====================================\n//            IMPORT\n// ====================================\n\n// React\nimport React from 'react';\n\n// Components\nimport TeamList from '../../components/AboutUs/AboutUsList.js';\n\n// Data\nimport teamMembers from '../../config/data/teamList.json';\n\n// Styling\nimport './AboutUs.css';\n\n// Bootstrap\nimport Button from \"react-bootstrap/Button\";\n\n\n// ====================================\n//          REACT COMPONENT\n// ====================================\n\n/**\n * Return About Us page components.\n * @returns - components for About Us page.\n */\n\nconst AboutUs = () => {\n  return (\n  <>\n    <div className=\"about-us-hero-container\">\n      <div>\n        <h1 id=\"about-us-main-title\">Behind Sprout.</h1>\n      </div>\n    </div>\n\n    <section id=\"about-us-section\">\n\n    <div className=\"about-us-content\">\n    <h2 className=\"about-us-h2\">Our Story</h2>\n    <p>Banded together by an interest to support sustainable living and gardening,\n       our team came up with <em>Sprout</em>, a gardening application to promote\n       bee-friendly and native gardens across the Greater Vancouver area.\n        <br/><br/>\n       With this application, we hope that users can connect with the community while\n       learning more about the ecosystem around them. We welcome users of all ages\n       and expertise to join us in nurturing their knowledge about plant-care and plant-life!\n    </p>\n    </div>\n\n    <div className=\"content\">\n        <h2 className=\"about-us-h2\">Team Sprout</h2>\n        <div className=\"all-members-container\">\n        <TeamList members={teamMembers} />\n        </div>\n    </div>\n\n    <div className=\"about-us-content\">\n    <h2 className=\"about-us-h2\">Resources and Gratitude</h2>\n    <p>Our team would like to sincerely thank Kwantlen Polytechnic University's School of Horticulture for \n      allowing us to reference from their very complete and fantastic <a className=\"link\" href=\"https://plantdatabase.kpu.ca/\">Plant Database</a> for this project.\n      <br/><br/>\n      We would also like to thank Patrick Guichon, our supervisor, for addressing our git-mergencies, workflow anxieties, and supporting this project to completion.\n      He provided us endless helpful support and feedback that was perfect for a team of sapling programmers! Thanks for helping us 'grow'!\n    </p>\n    </div>\n\n    <div className=\"about-us-content\">\n    <h2 className=\"about-us-h2\" id=\"contact\">Reach Out</h2>\n    <p>As students and new programmers, we are always open to questions or feedback. <br/>\n    Please feel free to reach out to us and offer suggestions.</p>\n    \n    <a href=\"mailto:sprout.team.3@gmail.com\" id=\"contact-btn\">\n    <Button type=\"button\" className=\"primary\" \n    className=\"custom-primary-button\" variant=\"primary\">\n      Contact Team Sprout\n    </Button>\n    </a>\n    </div>\n    </section>\n\n    <div id=\"about-us-nav-block\"></div>\n\n\n  </>\n  );\n};\n\nexport default AboutUs;","import AboutUsContainer from './AboutUsContainer';\n\nexport default AboutUsContainer;\n","import React from 'react';\nimport AboutUs from './AboutUsPage';\n\nconst AboutUsContainer = () => {\n  return (\n  <AboutUs />)\n}\n\nexport default AboutUsContainer;","export default __webpack_public_path__ + \"static/media/x.5f4ce294.svg\";","export default __webpack_public_path__ + \"static/media/sprout-shadow-light.dab246e8.svg\";","// ====================================\n//            IMPORTS\n// ====================================\n\n// React\nimport React from 'react';\n\n// Assets\nimport closeBtn from '../../config/assets/icons/x.svg';\nimport sproutTipIcon from '../../config/assets/icons/sprout-shadow-light.svg';\n\n// Styles\nimport './styles/SproutTip.css';\n\n\n\n// ====================================\n//          REACT COMPONENT\n// ====================================\n\n\n/**\n * Return a SproutTip component with a randomly selected tip from tips.\n * @param {Array} tips - an array of tip objects, each tip object has a reference and a tip.\n * @returns - a SproutTip React component.\n */\nconst SproutTip = ({ tips }) => {\n\n    // Randomly selects a tip from the given array of tips\n    let random_tip = tips[Math.floor(Math.random()*tips.length)];\n\n    const dismissTip = () => {\n        document.getElementById(\"alert-sprout-tip\").remove();\n    }\n\n    return (\n        <div id=\"alert-sprout-tip\">\n            <div id=\"sprout-tip-header\">\n\n            <h5><img id=\"sprout-tip-icon\" src={sproutTipIcon} alt=\"sprout-tip\"/>Sprout Tip</h5>\n            <img id=\"sprout-tip-close-btn\" src={closeBtn} alt=\"close-btn\" onClick={dismissTip}/>\n            </div>\n            <p id=\"tip-text\" >{random_tip[\"tip_text\"]}</p>\n\n            <hr/>\n            <p id=\"tip-reference\" className=\"text-muted\">{random_tip[\"tip_ref\"]}</p>\n        </div>\n    )\n}\n\n\nexport default SproutTip;","export default __webpack_public_path__ + \"static/media/water-icon-circle.87d834ee.svg\";","// ====================================\n//            IMPORTS\n// ====================================\n\n// React\nimport React, { useContext } from 'react';\nimport Axios from \"axios\";\n\n// Assets\nimport waterIcon from '../../config/assets/icons/water-icon-circle.svg';\n\n// Styles\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './styles/WaterAlerts.css';\n\n// Sprout and User Context from Layout.js Provider\nimport { SproutContext, UserContext } from \"../../components/Layout/Layout\";\n\n// ====================================\n//          REACT COMPONENT\n// ====================================\n\n\n/**\n * Return each plant in array plants as a WaterPlant alert.\n * @param {Array} plants - an array of plant objects that must be watered.\n * @returns - a complete set of WaterPlant components, one for each plant object in plant.\n */\nconst WaterAlert = ({plants, setAlerts}) => {\n\n    // Context States\n    let user = useContext(UserContext)[0];\n    let [sprouts, setSprouts] = useContext(SproutContext);\n    \n    const waterPlant = async (plant_id) => {\n\n        Axios.put('/api/alerts', {\n            userId: window.sessionStorage.getItem('userId'),\n            user_sprouts_id: plant_id\n        }).then(res => {\n            let currSprout = sprouts.filter(sprout => sprout.sproutId === plant_id)[0];\n\n            let wateredSprout = {...currSprout,\n                lastWatered: res.data.updatedSprout.user_sprouts_last_watered\n            };\n\n            let sproutIndex = sprouts.findIndex(\n                ({ sproutId }) => sproutId === plant_id\n              );\n            let updatedSprouts = [...sprouts];\n            updatedSprouts[sproutIndex] = wateredSprout;\n\n            setSprouts(updatedSprouts);\n            setAlerts(res.data.alerts);\n            user.points = user.points + 10;\n        });\n\n    }\n\n    return plants.map( plant => (\n\n        <div className=\"alert-water\" key={plant[\"user_sprouts_id\"]}>\n            <img className=\"alert-water-plant-img\" src={plant[\"user_sprouts_image\"]} alt=\"plant-img\"/>\n            <p><strong>{plant[\"user_sprouts_given_name\"]}</strong> needs to be watered!</p>\n\n            <img className=\"alert-water-btn shadow-sm\" src={waterIcon} alt=\"water-icon\" onClick={() => waterPlant(plant[\"user_sprouts_id\"])} />\n        </div>\n\n    ));\n}\n\nexport default WaterAlert;","export default __webpack_public_path__ + \"static/media/planty-dance.04d6397f.gif\";","// ====================================\n//            IMPORTS\n// ====================================\n\n// React\nimport React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\n\n// Components\nimport SproutTip from '../../components/Alerts/SproutTip';\nimport WaterAlerts from '../../components/Alerts/WaterAlerts';\n\n// Data\nimport sproutTips from '../../config/data/sprout-tips.json';\n\n// Styles\nimport './AlertsPage.css';\n\n// Assets\nimport plantyDance from '../../config/assets/gifs/planty-dance.gif';\n\n\n\n// ====================================\n//          REACT COMPONENT\n// ====================================\n\n/**\n * Return the components of the Alerts Page.\n * @returns - the components of Alerts Page.\n */\nconst AlertsPage = () => {\n\n  const [alertPlants, setAlertPlants] = useState([]);\n  \n  // Load Alerts\n  useEffect(() => {\n    let isMounted = true;\n    getAlerts()\n    return () => {isMounted = false};\n  }, []);\n  const getAlerts = async () => {\n    await Axios.post('/api/alerts', {\n      userId: window.sessionStorage.getItem('userId')\n    })\n    .then(res => {\n      setAlertPlants(res.data);\n    })\n  }\n\n  return (\n  <div id=\"container\">\n\n    <div id=\"profile-header\">\n      <h1 id=\"profile-h1\">Alerts</h1>\n    </div>\n\n    <hr/>\n\n    <div id=\"alerts-container\">\n\n    <SproutTip tips={sproutTips}/>\n\n    {alertPlants.length === 0 && (\n      <div id=\"empty-alerts\">\n      <img src={plantyDance} alt=\"planty-dance\" id=\"planty-dance\"/>\n      <strong>\n        Pat yourself on the back, <br/> all your plants are watered!\n      </strong>\n      </div>\n    )}\n\n    <WaterAlerts plants={alertPlants} setAlerts={setAlertPlants}/>\n  \n    </div>\n\n    <div id=\"nav-blocker\"></div>\n\n  </div>);\n};\n\nexport default AlertsPage;\n","import AlertsContainer from './AlertsContainer';\n\nexport default AlertsContainer;\n","import React from 'react';\nimport AlertsPage from './AlertsPage'\n\nconst AlertsContainer = () => {\n  return <AlertsPage />;\n}\n\nexport default AlertsContainer;","// ====================================\n//            IMPORTS\n// ====================================\n\n// React\nimport React from 'react';\n\n// Styles\nimport './styles/TopFive.css';\n\n\n// ====================================\n//          REACT COMPONENT\n// ====================================\n\n/**\n * Iterate through topfive array and create components for each top five champion.\n * @param {Array} topfive -  \n * @returns \n */\nconst TopFive = ({ topfive }) => {\n    return topfive.map( player => (\n        <div key={player[\"application_user_preferred_name\"]}>\n        <div className=\"champion-container\">\n            <img className=\"champion-img shadow-sm\" src={player[\"application_user_image\"]} alt={player[\"application_user_preferred_name\"]}/>\n            \n            <p className=\"champion-username\"><strong>{player[\"application_user_preferred_name\"]}</strong></p>\n            <p className=\"champion-points\">{player[\"application_user_points\"]}</p>\n\n        </div>\n        <hr/>\n        </div>\n    ));\n};\n\nexport default TopFive;","// =====================================\n//               IMPORTS\n// =====================================\n\n// React\nimport React from \"react\";\n\n// Styles\nimport \"./styles/LeaderboardTogglers.css\";\n\n/**\n * Return the top component of the Leaderboard screen\n *\n * Based on which team has the most points, the images will be rendered with the appropriate team data\n * @param {Array} teams - a sorted array containing objects with team data (points in descending order), to be used as props\n * @returns the top component of the Leaderboard screen\n */\n\nconst LeaderboardTogglers = ({ teams }) => {\n  // All the styles are inline because they have to accept a prop as a background image url, and there is no way to pass this directly into an external stylesheet. Furthermore, as they need the prop passed in, they also can't be defined at the top of the page above this rendering component. The only way to style was to do it inline.\n\n  // Based on the team with the most points, the positions will change, which is why all 3 of the components accept props.\n\n  return (\n    <>\n      <div id=\"leaderboard-togglers-container\">\n        <div className=\"team-toggler-container leaderboard-team-lower\">\n          <div className=\"leaderboard-white-bg\">\n            <div\n              className=\"\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(255,255,255,0.85), rgba(255,255,255,0.85)), url(${teams[1][\"team_image_url\"]})`,\n                backgroundRepeat: \"no-repeat\",\n                height: \"6rem\",\n                width: \"6rem\",\n                borderRadius: \"100rem\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div className=\"leaderboard-points\">\n                <p>{teams[1][\"team_points\"]}</p>\n                <p>pts</p>\n              </div>\n            </div>\n          </div>\n          <p className=\"leaderboard-names\">{teams[1][\"team_name\"]}</p>\n        </div>\n\n        <div className=\"team-toggler-container\">\n          <div className=\"leaderboard-white-bg\" id=\"leaderboard-white-bg-first\">\n            <div\n              className=\"\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(255,255,255,0.85), rgba(255,255,255,0.85)), url(${teams[0][\"team_image_url\"]})`,\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"cover\",\n                height: \"8rem\",\n                width: \"8rem\",\n                borderRadius: \"100rem\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div className=\"leaderboard-points\">\n                <p style={{ fontSize: \"1.25rem\" }}>{teams[0][\"team_points\"]}</p>\n                <p>pts</p>\n              </div>\n            </div>\n          </div>\n          <p className=\"leaderboard-names\">{teams[0][\"team_name\"]}</p>\n        </div>\n\n        <div className=\"team-toggler-container leaderboard-team-lower\">\n          <div className=\"leaderboard-white-bg\">\n            <div\n              className=\"\"\n              style={{\n                backgroundImage: `linear-gradient(rgba(255,255,255,0.85), rgba(255,255,255,0.85)), url(${teams[2][\"team_image_url\"]})`,\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"cover\",\n                height: \"6rem\",\n                width: \"6rem\",\n                borderRadius: \"100rem\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div className=\"leaderboard-points\">\n                <p>{teams[2][\"team_points\"]}</p>\n                <p>pts</p>\n              </div>\n            </div>\n          </div>\n          <p className=\"leaderboard-names\">{teams[2][\"team_name\"]}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LeaderboardTogglers;\n","// =====================================\n//               IMPORT\n// =====================================\n\n// React\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\n// Data for placeholders\nimport teamsData from \"./team.json\";\n\n// Components\nimport TopFive from \"../../components/Leaderboard/TopFive\";\nimport LeaderboardTogglers from \"../../components/Leaderboard/LeaderboardTogglers\";\n\n// Styles\nimport \"./Leaderboard.css\";\n\n// =====================================\n//          REACT COMPONENT\n// =====================================\n\n/**\n * Return the components of the Leaderboard Page.\n * @returns - the components of the Leaderboard Page.\n */\nconst LeaderboardPage = () => {\n\n  // States for the page\n  const [topFiveUsers, setTopFiveUsers] = useState([]);\n  const [teamPoints, setTeamPoints] = useState(teamsData); // requires placeholder teamsData to prevent undefined errors\n\n  // Fetch data on mount of the components/page\n  useEffect(() => {\n    getTeamPoints();\n    getTopFiveUsers();\n  }, []);\n\n  // Fetch top five users\n  const getTopFiveUsers = async () => {\n    await Axios.get(\"/api/leaderboards-topFive\")\n    .then((res) => {\n      setTopFiveUsers(res.data)\n    });\n  };\n\n  // Fetch team points\n  const getTeamPoints = async () => {\n    await Axios.get(\"/api/leaderboards-team-points\")\n    .then((res) => {\n      setTeamPoints(res.data)\n    });\n  }\n\n  // Sort for highest teams among team points in order\n  teamPoints.sort(\n    (a, b) => parseInt(b[\"team_points\"]) - parseInt(a[\"team_points\"])\n  );\n  \n  return (\n    <>\n      <div id=\"leaderboard-top-container\">\n        <div id=\"leaderboard-accent-bg\"></div>\n        <div id=\"profile-header\">\n          <h1 id=\"leaderboard-h1\">Leaderboard</h1>\n        </div>\n\n        <hr />\n        <LeaderboardTogglers teams={teamPoints} />\n      </div>\n\n      <div id=\"top-five-container\">\n        <p id=\"top-five-header\">Leading Sprout Gardeners</p>\n        <TopFive topfive={topFiveUsers} />\n\n        <div id=\"leaderboard-nav-block\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default LeaderboardPage;\n","import LeaderboardContainer from './LeaderboardContainer';\n\nexport default LeaderboardContainer;\n","import React from 'react';\nimport Leaderboard from './LeaderboardPage'\n\nconst LeaderboardContainer = () => {\n  return <Leaderboard />\n}\n\nexport default LeaderboardContainer;","export default __webpack_public_path__ + \"static/media/sprout_logo.375b42b0.png\";","// =====================================\n//               IMPORTS\n// =====================================\n\n// React\nimport React from \"react\";\n\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\n// Assets\nimport sproutLogo from \"./components/Layout/images/sprout_logo.png\";\n\n/**\n * Return the splash screen component to be used for loading screens\n * @returns splash screen component\n */\n\nconst Splash = () => {\n  return (\n    <>\n      <div id=\"splash-container\">\n        <img id=\"under-const-logo\" src={sproutLogo} alt=\"logo\" />\n        <br/>\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </div>\n    </>\n  );\n};\n\nexport default Splash;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Login.css\";\nimport { withRouter } from \"react-router\";\n\n// Splash Screen\nimport Splash from \"../../Splash\";\n\n// Styles\nimport \"./Login.css\";\n\nAxios.defaults.withCredentials = false;\n\nconst schema = yup.object().shape({\n  // REGEX statement copied from this article\n  // https://stackoverflow.com/questions/1221985/how-to-validate-a-user-name-with-regex\n  username: yup.string().required(),\n  password: yup.string().required(),\n});\n\nconst Login = (props) => {\n  const [splash, setSplash] = useState(true); //splash screen will always render upon initialization\n  const [validation, setValidation] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => setSplash(false), 2000); //after 2 seconds the state will be switched to false\n  }, []);\n\n  return (\n    <>\n      {splash === false ? (\n        <div id=\"login-container\">\n          <div id=\"login-bg\">\n            <div id=\"login-card\">\n              <Formik\n                validationSchema={schema}\n                onSubmit={\n                  // QUERY USER DATA\n                  /**\n                   * @params username, password\n                   * Return a user's data.\n                   * @returns - components of Profile Page.\n                   */\n                  async (values) => {\n                    Axios.post('/api/login', {\n                      userName: values.username,\n                      password: values.password\n                    })\n                    .then(res => {\n                      if (res.data === \"User not found\") {\n                        window.location = \"/signup\"\n                      }\n                      else if (res.data === \"Failed\"){\n                        setValidation(false)\n                      }\n                      else {\n                        // window.sessionStorage.setItem('userId', res.data.application_user_id);\n                        // window.location = '/profile'\n                      }\n                    })\n                }}\n                initialValues={{\n                  username: \"\",\n                  password: \"\",\n                }}\n              >\n                {({ handleSubmit, handleChange, values, touched, errors }) => (\n                  <Form onSubmit={handleSubmit}>\n                    <h3>SPROUT LOGIN</h3>\n                    <hr />\n                    <Form.Group controlId=\"validationFormik01\">\n                      <Form.Label>Username</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Username\"\n                        name=\"username\"\n                        value={values.username}\n                        onChange={handleChange}\n                        required\n                      />\n                    </Form.Group>\n\n                    <Form.Group\n                      controlId=\"validationFormik02\"\n                      style={\n                        (errors.username && touched.username) ||\n                        (errors.password && touched.password)\n                          ? { marginBottom: 0 }\n                          : null\n                      }\n                    >\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control\n                        style={{ marginBottom: \"0.25rem\" }}\n                        type=\"password\"\n                        placeholder=\"Enter Password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        required\n                      />\n                    </Form.Group>\n                    {!validation ? (\n                      <ErrorMessage>\n                        {() => (\n                          <div\n                            style={{ color: \"red\", marginBottom: \"0.25rem\" }}\n                          >\n                            Incorrect username or password.\n                          </div>\n                        )}\n                      </ErrorMessage>\n                    ) : null}\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      className=\"custom-primary-button\"\n                    >\n                      Login\n                    </Button>\n                    <br />\n                    <Link to=\"/signup\">\n                      <p id=\"login-signup-link\">Create an Account</p>\n                    </Link>\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </div>\n          <Link to=\"/about-us\" id=\"about-us-link\">\n            <p>About the Sprout Team</p>\n          </Link>\n        </div>\n      ) : (\n        <Splash />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(Login);\n","import LoginContainer from './LoginContainer';\n\nexport default LoginContainer;\n","import React from 'react';\nimport Login from './Login'\n\nconst LoginContainer = () => {\n  return <Login />\n}\n\nexport default LoginContainer;","// =====================================\n//               IMPORTS\n// =====================================\n\n// React\nimport React, { useState } from \"react\";\n\n// Axios\nimport Axios from \"axios\";\n\n// Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Styles\nimport \"./Signup.css\";\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\nconst Signup = () => {\n  // Form States\n  const [inputUsername, setUsername] = useState(\"\");\n  const [inputPassword, setPassword] = useState(\"\");\n  // Validation Username existence\n  const [userExistValidation, setUserExistValidation] = useState(true);\n\n  // Post to /signup\n  const sendAccountInfo = () => {\n    if (\n      document.getElementById(\"formUsername\").value !== \"\" &&\n      document.getElementById(\"formPassword\").value !== \"\"\n    ) {\n      Axios.post(\"/api/signup\", {\n        username: inputUsername,\n        password: inputPassword,\n      }).then((res) => {\n        if (res.data !== \"Username exists\") {\n          window.sessionStorage.setItem(\"userName\", res.data[0]);\n          setUserExistValidation(true);\n          window.location = \"/join-team\";\n        } else {\n          setUserExistValidation(false);\n        }\n      });\n    } else {\n      alert(\"Invalid username or password, try again.\");\n    }\n  };\n\n  return (\n    <div id=\"login-container\">\n      <div id=\"signup-bg\">\n        <div id=\"login-card\">\n          <Form>\n            <h3>Sign Up</h3>\n            <hr />\n            <Form.Group controlId=\"formUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Username\"\n                name=\"new_user_name\"\n                defaultValue={inputUsername}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                name=\"new_user_password\"\n                defaultValue={inputPassword}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n\n            {!userExistValidation && (\n              <div style={{ color: \"red\", marginBottom: \"0.25rem\" }}>\n                Username already exists.\n              </div>\n            )}\n\n              { inputUsername.length === 0 ? (\n                  <div\n                  style={{ color: \"red\", marginBottom: \"0.25rem\" }}>\n                  Please enter a username.\n                </div>\n                ) \n                :\n                (inputPassword.length === 0 ? (\n                  <div\n                  style={{ color: \"red\", marginBottom: \"0.25rem\" }}>\n                  Please enter a password.\n                </div>) : null)\n                }\n            <Button\n              variant=\"primary\"\n              type=\"button\"\n              className=\"custom-primary-button\"\n              onClick={sendAccountInfo}\n            >\n              Create a Sprout Account\n            </Button>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import SignupContainer from './SignupContainer';\n\nexport default SignupContainer;\n","import React from 'react';\nimport Signup from './Signup'\n\nconst SignupContainer = () => {\n  return <Signup />\n}\n\nexport default SignupContainer;","export default __webpack_public_path__ + \"static/media/soil.c9793243.jpg\";","export default __webpack_public_path__ + \"static/media/water.d527b1fc.jpg\";","export default __webpack_public_path__ + \"static/media/sunshine.b75e8b8f.jpg\";","// ====================================\n//             IMPORT\n// ====================================\n\n// React\nimport React, { useState } from \"react\";\n\n// Axios\nimport Axios from \"axios\";\n\n// Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Styling\nimport \"./JoinTeam.css\";\n\n// Assets\nimport soil from \"../../config/assets/images/soil.jpg\";\nimport water from \"../../config/assets/images/water.jpg\";\nimport sunshine from \"../../config/assets/images/sunshine.jpg\";\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Returns the Join Team page, which is itself a component\n *\n * @returns the Join Team page component\n */\n\nconst JoinTeam = () => {\n\n  // Form States\n  const [chosenPreferredName, setChosenPreferredName] = useState(\"\");\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\n  \n  // Post User's chosen name and team number if the fields are filled in\n  const submitUserInfo = () => {\n\n    if (selectedTeam === \"\" && chosenPreferredName === \"\"){\n      alert(\"Hold on... you didn't fill this in at all! You thought we wouldn't notice? Please try again.\")\n    } else if (selectedTeam === \"\") {\n      alert(\"You didn't choose a team! Please choose a team. :)\")\n    } else if (chosenPreferredName === \"\") {\n      alert(\"You don't have a name! Please submit a valid preferred name.\")\n    } else {\n      Axios.post('/api/join-team', {\n        preferredName: chosenPreferredName,\n        team: selectedTeam\n      })\n      .then(res => {\n        window.location = '/';\n      })\n    }\n  }\n\n  return (\n    <div id=\"container\">\n      <h1>Almost There!</h1>\n      <hr />\n      <Form>\n        <Form.Group>\n          <strong>\n            <p id=\"name-text\" className=\"center-p\">Tell us your Preferred Name</p>\n          </strong>\n          <Form.Control type=\"text\" placeholder=\"Enter your name...\" required \n          defaultValue={chosenPreferredName} onChange={e => setChosenPreferredName(e.target.value)}/>\n        </Form.Group>\n        <hr />\n        <p className=\"center-p\">\n          <strong>Join a Sprout team!</strong>\n          <br/><span id=\"team-note\">(Choose wisely, this cannot be modified)</span>\n        </p>\n\n        <Form.Group controlId=\"teamSelect\" className=\"teams-form-group\">\n          <div id=\"select-teams\">\n          <input type=\"radio\" id=\"team-1\" name=\"team\" required/>\n          <label htmlFor=\"team-1\" onClick={() => setSelectedTeam(1)}>\n            <div className=\"team-pic-bg\">\n              <img src={soil} alt=\"\" className=\"team-pic\"></img>\n            </div>\n          </label>\n          <strong>\n            <p>Soil</p>\n          </strong>\n          \n          <input type=\"radio\" id=\"team-2\" name=\"team\" />\n          <label htmlFor=\"team-2\" onClick={() => setSelectedTeam(2)}>\n            <div className=\"team-pic-bg\">\n              <img src={water} alt=\"\" className=\"team-pic\"></img>\n            </div>\n          </label>\n          <strong>\n            <p>Water</p>\n          </strong>\n\n          <input type=\"radio\" id=\"team-3\" name=\"team\" />\n          <label htmlFor=\"team-3\" onClick={() => setSelectedTeam(3)}>\n            <div className=\"team-pic-bg\">\n              <img src={sunshine} alt=\"\" className=\"team-pic\"></img>\n            </div>\n          </label>\n          <strong>\n            <p>Sun</p>\n          </strong>\n          </div>\n\n        </Form.Group>\n\n        <div id=\"teams\">\n\n\n        </div>\n      <div id=\"submitUser-btn\">\n        <Button\n\n          variant=\"primary\"\n          type=\"button\"\n          className=\"custom-primary-button\"\n          onClick={submitUserInfo}\n        >\n          Confirm\n        </Button>\n        </div>\n\n      </Form> \n      <div id=\"vector-bg\"></div>\n    </div>\n  );\n};\n\nexport default JoinTeam;\n","import JoinTeamContainer from './JoinTeamContainer';\n\nexport default JoinTeamContainer;\n","import React from 'react';\nimport JoinTeam from './JoinTeam'\n\nconst JoinTeamContainer = () => {\n  return <JoinTeam />\n}\n\nexport default JoinTeamContainer;","// =====================================\n//               IMPORTS\n// =====================================\n\n// React\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Styles\nimport './styles/SproutItem.css'\n\n/**Return the plant gallery of the user's sprouts\n * \n * @param {Array} sprouts - an array of sprout objects belonging to a user\n * @returns - plant gallery component with each sprout rendered as its own individual component\n */\n\nconst SproutItem = ({sprout}) => {\n  return (\n    <div className=\"plant-list-item\" key={sprout[\"sproutId\"]}>\n      <Link to={`/plant-profile/${sprout[\"sproutId\"]}`}>\n      <img src={sprout[\"imageUrl\"]} className=\"plant-list-img\" alt=\"plant\"/>\n      </Link>\n      <div className=\"plant-list-name-div\">\n      <strong><p className=\"plant-list-name\">{sprout.name}</p></strong>\n      </div>\n    </div>\n    )\n};\n\nexport default SproutItem;\n","// =====================================\n//               IMPORTS\n// =====================================\n\n// React\nimport React from \"react\";\n\n// Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Styles\nimport \"./styles/SproutGallery.css\";\n\n// =====================================\n//          REACT COMPONENT\n// =====================================\n\nimport SproutItem from \"./SproutItem\";\n\n/**\n * Return the parent container of the user's sprouts (Sprout Items)\n * @param {Array} sprouts - an array of objects containing the user's plant (sprout) information\n * @returns the parent container of the user's sprouts (Sprout Items)\n */\n\nconst SproutGallery = ({ sprouts }) => {\n  return (\n    <Container fluid>\n      <Row id=\"sprout-gallery-container\">\n        {sprouts.map(\n          sprout => <SproutItem sprout={sprout} key={sprout.sproutId} />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default SproutGallery;\n","// ====================================\r\n//            \tIMPORT\r\n// ====================================\r\n\r\n// React\r\nimport React from \"react\";\r\n\r\n// Styles\r\nimport \"./styles/SocialIcons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// React Share\r\n// documentation: https://www.npmjs.com/package/react-share\r\nimport { TwitterShareButton, FacebookShareButton, FacebookIcon, TwitterIcon } from \"react-share\"; \r\n\r\n// ====================================\r\n//           REACT COMPONENT\r\n// ====================================\r\n\r\n/**\r\n * Return social media icon componen for sharing to a User's social media.\r\n * @returns Twitter and FB share icons.\r\n */\r\n\r\nconst SocialIcons = () => {\r\n  return (\r\n    <>\r\n    <div id=\"social-container\">\r\n    <TwitterShareButton url = {\"Join Sprout today at www.my-sprout.ca!\"}><TwitterIcon size={35} round={true} id=\"twitter-icon\"/> </TwitterShareButton>\r\n    <FacebookShareButton url = {\"www.my-sprout.ca\"} quote={\"Join Sprout today!\"}><FacebookIcon size={35} round={true} id=\"fb-icon\"/> </FacebookShareButton>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialIcons;\r\n","// ====================================\n//            \tIMPORT\n// ====================================\n\n// React\nimport React, { useState, useContext } from \"react\";\nimport Axios from \"axios\";\n\n// Styles\nimport \"./styles/ProfilePictureModal.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Components\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport SocialIcons from \"./SocialIcons\";\n\n// User Context from Layout.js Provider\nimport { UserContext } from \"../../components/Layout/Layout\";\n\n/**\n * Return the profile image component, with editing profile modal triggered on click.\n * @param {Bootstrap} props - bootstrap props required to vertically center modal.\n * @param {String} profilePic - the url to user's profile picture.\n * @returns - the profile image component, with editing profile modal triggered on click.\n */\nfunction ProfilePictureModal({ props, prefName, setPrefNameDisplay }) {\n  // Get Auth user Id\n  let authUser = useContext(UserContext)[0];\n\n  // States and functions to trigger modal - code from Bootstrap\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // Profile editing states\n  const [profilePic, setProfilePic] = useState(authUser.profilePicture);\n  const [userPrefName, setUserPrefName] = useState(prefName);\n\n  // State to store the image being uploaded\n  const [imageSelected, setImageSelected] = useState(authUser.profilePicture);\n\n  // Store the image to Cloudinary, and save the URL to database - code adapted from PedroTech (YouTube)\n\n  const editProfile = async () => {\n    // Create a new formData object for the file to be uploaded\n    const imageData = new FormData();\n    imageData.append(\"file\", imageSelected);\n    imageData.append(\"upload_preset\", \"sproutUser\"); // Cloudinary image upload presets\n    let res1 = await Axios.post(\n      \"https://api.cloudinary.com/v1_1/sprout03/image/upload/\",\n      imageData\n    );\n\n    // Put request to profile\n    Axios.put(\"/api/profile\", {\n      userId: authUser.userId,\n      profilePic: res1.data.secure_url,\n      newUserPrefName: userPrefName,\n    }).then((res) => {\n      // Update User Context and page with new profile picture\n      let newProfilePic = res.data.application_user_image;\n      authUser.profilePicture = newProfilePic;\n      setProfilePic(newProfilePic);\n\n      // Update User Context and page with new profile name\n      let newUserPrefName = res.data.application_user_preferred_name;\n      authUser.name = newUserPrefName;\n      setPrefNameDisplay(newUserPrefName);\n    });\n  };\n\n  return (\n    <>\n      <img\n        id=\"user-profile-picture\"\n        className=\"shadow-sm\"\n        src={profilePic}\n        alt=\"user-pic\"\n        onClick={handleShow}\n      />\n\n      <Modal show={show} onHide={handleClose} {...props} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Profile Settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label className=\"sprout-modal-text\">\n                Profile Picture\n              </Form.Label>\n              <Form.File\n                id=\"FormControlFile1\"\n                label=\"Upload New Profile Picture\"\n                onChange={(event) => {\n                  setImageSelected(event.target.files[0]);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"sprout-modal-text\">\n              <Form.Label className=\"sprout-modal-text\">\n                Display Name\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                defaultValue={userPrefName}\n                onChange={(event) => setUserPrefName(event.target.value)}\n              />\n            </Form.Group>\n          </Form>\n          <strong>\n            <p>Share to social media!</p>\n          </strong>\n          <SocialIcons />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <div onClick={handleClose}>\n            <Button\n              variant=\"primary\"\n              className=\"custom-primary-button\"\n              onClick={editProfile}\n            >\n              Save Changes\n            </Button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ProfilePictureModal;\n","// ====================================\n//            \tIMPORT\n// ====================================\n\n// React\nimport React from 'react';\n\n// Styles\nimport \"./styles/Scorebar.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return the scorebar component with user information.\n * @param {Integer} points- an integer representing the amount of points a user has.\n * @returns - the scorebar component with the user's points and total number of sprouts.\n */\n\nconst Scorebar = ({points, sprouts}) => {\n  return (\n  <div id=\"my-sprouts-score-bar\" className=\"shadow-sm\">\n    <div className=\"my-sprouts-score-bar-item\">\n    <span className=\"my-score-bar-item-value\" id=\"points-number\">{points}</span>\n    <span className=\"my-score-bar-item-title\">Points</span>\n    </div>\n\n    <div className=\"my-sprouts-score-bar-item\">\n    <span className=\"my-score-bar-item-value\" id=\"sprouts-number\">{sprouts.length}</span>\n    <span className=\"my-score-bar-item-title\">Sprouts</span>\n    </div>\n  </div>);\n};\n\nexport default Scorebar;","export default __webpack_public_path__ + \"static/media/addbutton.c1b483c4.svg\";","// ========================================\n//        Import Statements\n// ========================================\n\n// React\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// Axios\nimport Axios from \"axios\";\n\n// Bootstrap and styling\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport addButton from \"../../config/assets/icons/addbutton.svg\";\nimport \"./styles/AddPlantModal.css\";\n\n// Other imports\nimport { UserContext, SproutContext } from \"../Layout/Layout\";\n\n// ========================================\n//        Component Code\n// ========================================\n\nconst AddPlantModal = ({ type, family }, props) => {\n  const [show, setShow] = useState(false);\n  const [imageSelected, setImageSelected] = useState(\n    \"https://res.cloudinary.com/sprout03/image/upload/v1621536166/default_sprout_qlbudo.png\"\n  ); // image selected states for file input\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  let img_url =\n    \"https://res.cloudinary.com/sprout03/image/upload/v1621536166/default_sprout_qlbudo.png\";\n  const setSprouts = useContext(SproutContext)[1];\n  let authUser = useContext(UserContext)[0];\n  let history = useHistory();\n\n  const submitForm = async () => {\n    if (\n      document.getElementById(\"sproutName\").value !== \"\" &&\n      document.getElementById(\"sproutWateringInterval\").value !== \"\" &&\n      document.getElementById(\"sproutWateringInterval\").value > 0 &&\n      document.getElementById(\"sproutWateringInterval\").value % 1 === 0\n    ) {\n      // Instantiate new imageData for Cloudinary - code snippet adapted from PedroTech\n      let imageData = new FormData();\n      imageData.append(\"file\", imageSelected); // File is current image selected\n      imageData.append(\"upload_preset\", \"sproutPlant\"); // Cloudinary upload preset\n\n      // Reach Sprout Cloudinary API and upload image - code snippet adapted from PedroTech\n      Axios.post(\n        \"https://api.cloudinary.com/v1_1/sprout03/image/upload\",\n        imageData\n      )\n        .then((res) => {\n          img_url = res.data.secure_url;\n        })\n        .catch((err) => console.log(err));\n\n      setTimeout(() => {\n        Axios.post(\"/api/profile/\", {\n          family: document.getElementById(\"sproutFamily\").value,\n          name: document.getElementById(\"sproutName\").value,\n          notes: document.getElementById(\"sproutNotes\").value,\n          type: document.getElementById(\"sproutType\").value,\n          wateringInterval: document.getElementById(\"sproutWateringInterval\")\n            .value,\n          imageUrl: img_url,\n          userId: authUser.userId,\n        })\n          .then((res) => {\n            let data = res.data;\n            let updatedSprouts = [];\n            for (let i = 0; i < data.length; i++) {\n              let sproutObject = {\n                dateAdded: data[i].user_sprouts_date_added,\n                family: data[i].user_sprouts_family,\n                name: data[i].user_sprouts_given_name,\n                notes: data[i].user_sprouts_notes,\n                sproutId: data[i].user_sprouts_id,\n                type: data[i].user_sprouts_type,\n                wateringInterval: data[i].user_sprouts_watering_intervals,\n                imageUrl: data[i].user_sprouts_image,\n                userId: data[i].application_user_id,\n              };\n              updatedSprouts.push(sproutObject);\n            }\n            if (res.status === 200) {\n              setSprouts(updatedSprouts);\n              authUser.points += 100;\n              handleClose();\n              history.push(\"/profile\");\n            }\n          })\n          .catch((err) => console.log(err));\n      }, 1500);\n    } else {\n      alert(\n        \"You must fill out all the required fields, and watering interval must be an integer greater than 0.\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <img\n        src={addButton}\n        id=\"profile-add-button\"\n        alt=\"\"\n        onClick={handleShow}\n      />\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add a Sprout</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"sproutName\">\n            <strong>\n              <p className=\"sprout-modal-text\">Name*</p>\n            </strong>\n            <Form.Control\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Sprout Name...\"\n              required\n            />\n          </Form.Group>\n          <Form.Group controlId=\"sproutFamily\">\n            <strong>\n              <p className=\"sprout-modal-text\">Family</p>\n            </strong>\n            <Form.Control\n              name=\"family\"\n              type=\"text\"\n              placeholder=\"Sprout Name...\"\n              defaultValue={family}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"sproutType\">\n            <strong>\n              <p className=\"sprout-modal-text\">Type</p>\n            </strong>\n            <Form.Control\n              name=\"type\"\n              type=\"text\"\n              placeholder=\"Sprout Type...\"\n              defaultValue={type}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"sproutWateringInterval\">\n            <strong>\n              <p className=\"sprout-modal-text\">Watering Interval*</p>\n            </strong>\n            <Form.Control\n              name=\"wateringInterval\"\n              type=\"number\"\n              placeholder=\"Number of days between watering...\"\n              min={1}\n              required\n            />\n          </Form.Group>\n          <Form.Group controlId=\"sproutNotes\">\n            <strong>\n              <p className=\"sprout-modal-text\">Additional Notes</p>\n            </strong>\n            <Form.Control name=\"notes\" as=\"textarea\" rows={3} />\n          </Form.Group>\n          <Form.Group>\n            <strong>\n              <p className=\"sprout-modal-text\">Upload Sprout Picture</p>\n            </strong>\n            <Form.File\n              type=\"file\"\n              id=\"sproutUploadPicture\"\n              onChange={(event) => setImageSelected(event.target.files[0])}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            onClick={submitForm}\n            type=\"submit\"\n            className=\"custom-primary-button\"\n          >\n            Add a New Sprout\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddPlantModal;\n","import React from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport './styles/Welcome.css';\n\nconst Welcome = () => {\n    return (\n        <div id=\"found-none-div\" className=\"text-muted\">\n            <h5>Looks like you don't have any Sprouts!</h5>\n\n            <h6>Sprout Starter:</h6> \n            <p>Tap the <strong>+</strong> button to add a new Sprout or go to Search to find plant information.</p>\n            <p>Tap your profile image to refresh your profile.</p>\n        </div>\n    )\n}\n\nexport default Welcome;","// ====================================\n//            \t IMPORT\n// ====================================\n\n// React\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Axios from \"axios\";\n\n// Components\nimport SproutGallery from \"../../components/Profile/SproutGallery\";\nimport ProfilePictureModal from \"../../components/Profile/ProfilePictureModal\";\nimport Scorebar from \"../../components/Profile/Scorebar\";\nimport AddPlantModal from \"../../components/Modals/AddPlantModal\";\nimport Welcome from \"../../components/Profile/Welcome\";\n\n// Sprout and User Context from Layout.js Provider\nimport { SproutContext, UserContext } from \"../../components/Layout/Layout\";\n\n// Styles\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Profile.css\";\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return the Profile Page components.\n * @returns - components of Profile Page.\n */\nconst ProfilePage = ({ userContext }) => {\n  const user = useContext(UserContext)[0];\n  const [points, setPoints] = useState(user.points);\n  const [sprouts, setSprouts] = useContext(SproutContext);\n  const [display, setDisplay] = useState(true);\n  const [userPrefNameDisplay, setPrefNameDisplay] = useState(user.name);\n\n  useEffect(() => {\n    setPoints(user.points);\n  }, [sprouts]);\n\n  useEffect(() => {\n    let isMounted = true;\n    getSprouts();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => setDisplay(false), 500);\n  }, []);\n\n  const getSprouts = async () => {\n    await Axios.get(\"/api/profile\").then((res) => {\n      user.userId = res.data.userId;\n      user.username = res.data.username;\n      setPrefNameDisplay(res.data.name);\n      user.points = res.data.points;\n      user.team = res.data.team;\n      user.profilePicture = res.data.profilePicture;\n      user.sprouts = res.data.sprouts;\n      setSprouts(res.data.sprouts);\n    });\n  };\n\n  //after 0.5 seconds the state will be switched to false, which will allow the fetch of profile picture to complete\n\n  // const [saveSprout, setSaveSprout] = useState(false);\n\n  // This is to prevent the useEffect hook from firing on each mount of the AddPlant modal\n\n  // const useMountedRef = () => {\n  //   const mountedRef = useRef(false);\n  //   useEffect(() => {\n  //     setTimeout(() => {\n  //       mountedRef.current = true;\n  //     });\n  //   }, []);\n\n  //   return mountedRef;\n  // };\n\n  // const mountedRef = useMountedRef();\n\n  // useEffect(() => {\n  //   if (mountedRef.current) {\n  //     console.log(\"hello\")\n  //   }\n  // }, [saveSprout]);\n\n  // const addsprout = () => setSaveSprout(true);\n  // const resetsproutstate = () => {\n  //   if (saveSprout === true) {\n  //     setSaveSprout(false);\n  //   }\n  // };\n\n  return (\n    <>\n      {display === false ? (\n        <div id=\"container\">\n          <div id=\"profile-header\">\n            <h1 id=\"profile-h1\">My Sprouts</h1>\n            <AddPlantModal />\n          </div>\n\n          <hr />\n\n          <div id=\"my-sprouts-user-container\">\n            <ProfilePictureModal\n              prefName={user.name}\n              setPrefNameDisplay={setPrefNameDisplay}\n            />\n            <h5 id=\"my-sprouts-user-name\">{userPrefNameDisplay}</h5>\n          </div>\n          <Scorebar points={points} sprouts={sprouts} />\n\n          { sprouts.length === 0 && <Welcome/>}\n\n          <SproutGallery sprouts={sprouts} />\n          <div id=\"vector-bg\"></div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useContext, useState } from 'react';\nimport { UserContext } from '../../components/Layout/Layout';\nimport ProfilePage from './ProfilePage'\n\nconst initialState = {\n  user: {\n  userId: 0,\n  teamId: 0,\n  username: '',\n  password: '',\n  name: '',\n  profilePicture:'',\n  team: 0,\n  points: 0,\n  sprouts: []\n},\nsprouts: []\n}\n\nconst ProfileContainer = () => {\n\n  // const [state, dispatch] = useReducer(reducer, initialState)\n  const user = useContext(UserContext);\n  const sproutState = useState(initialState.sprouts)\n  \n  return <ProfilePage userContext={user} userSprouts={sproutState} />\n}\n\nexport default ProfileContainer;","import ProfileContainer from './ProfileContainer';\n\nexport default ProfileContainer;\n","export default __webpack_public_path__ + \"static/media/big-leaf.2ff9f6d2.svg\";","export default __webpack_public_path__ + \"static/media/water-can-slim.a520d3aa.svg\";","// ====================================\n//               IMPORT\n// ====================================\n\n// React\nimport React from 'react';\n\n// Styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/PlantInfo.css';\n\n// Assets\nimport leaf from '../../config/assets/icons/big-leaf.svg';\nimport watercan from '../../config/assets/icons/water-can-slim.svg';\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return plant information (Family and Watering) for the passed plant object.\n * @param {Object} plant - is the plant object for the current page. \n * @returns - the Family and Watering information for the passed plant.\n */\nconst PlantInfo = ({plant, wateredDate}) => {\n\n    return (\n        <>\n        <div id=\"plant-profile-card\">\n            <div className=\"plant-profile-info-card\">\n                <img src={leaf} className=\"plant-profile-icon\" alt=\"leaf-icon\"></img>\n                <div className=\"plant-profile-info-section\">\n                    <p className=\"plant-profile-subhead1 plant-profile-subhead\">Family</p>\n                    <p className=\"plant-profile-value1 plant-profile-value\" id=\"plant-profile-family\">{plant[\"family\"]}</p>\n\n                    <p className=\"plant-profile-subhead2 plant-profile-subhead\">Type</p>\n                    <p className=\"plant-profile-value2 plant-profile-value\" id=\"plant-profile-type\">{plant[\"type\"]}</p>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"plant-profile-card\">\n            <div className=\"plant-profile-info-card\">\n                <img src={watercan} className=\"plant-profile-icon\" alt=\"leaf-icon\"></img>\n                <div className=\"plant-profile-info-section\">\n                    <p className=\"plant-profile-subhead1 plant-profile-subhead\">Water Interval</p>\n                    <p className=\"plant-profile-value1 plant-profile-value\" id=\"plant-profile-watering\">{plant[\"wateringInterval\"]} days</p>\n\n                    <p className=\"plant-profile-subhead2 plant-profile-subhead\">Last Watered</p>\n                    <p className=\"plant-profile-value2 plant-profile-value\" id=\"plant-profile-last-watered\">{wateredDate}</p>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default PlantInfo;","// ====================================\n//            \tIMPORT\n// ====================================\n\n// React\nimport React from 'react';\n\n// Styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/PlantNotes.css'\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return the notes card component using the string passed.\n * @param {String} plantNotes - a strong of a plant's notes. \n * @returns - a card component containing plantNotes.\n */\nconst PlantNotes = ({plantNotes}) => {\n\n    return (\n\n        <div className=\"plant-profile-notes-card\">\n            <p id=\"plant-profile-subhead\">Notes</p>\n            <p id=\"plant-profile-notes\">{plantNotes}</p>\n        </div>\n\n    )\n}\n\nexport default PlantNotes;","export default __webpack_public_path__ + \"static/media/dig_up.300e858d.svg\";"," // =====================================\n//               IMPORT\n// =====================================\n\n// React\nimport { React, useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Assets\nimport DigUpButton from \"../../config/assets/icons/dig_up.svg\";\n\n// Bootstrap\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\n// Styles\nimport \"./styles/PlantProfileSmallButtons.css\";\nimport { SproutContext, UserContext } from \"../Layout/Layout\";\n\n/**\n * Return a component with modal popup which is triggered by the Dig Up button\n * \n * @param {*} props - Bootstrap import\n * @returns Dig Up component\n */\n\nconst DigUp = ( {sprout}, props) => {\n  const [show, setShow] = useState(false);\n  const [sprouts, setSprouts] = useContext(SproutContext);\n  const user = useContext(UserContext)[0];\n  const removeSproutFromContext = (sproutId) => {\n    for (let index = 0; index < sprouts.length; index++) {\n      if (sproutId === sprouts[index].sproutId) {\n        sprouts.splice(index, 1);\n      }\n    }\n    setSprouts(sprouts);\n  }\n  \n  const handleClose = () => {\n    setShow(false)\n  };\n\n  const handleSubmit = () => {\n    fetch(`/api/sprouts/${user.userId}/${sprout.sproutId}`, {\n      method: \"DELETE\"\n    })\n    .then(response => console.log(response))\n    .catch(error => console.log(error));\n    removeSproutFromContext(sprout.sproutId)\n  }\n\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <div className=\"plant-profile-small-button-container plant-profile-small-button-height-fix\">\n        <div id=\"dig-up-button\">\n          <img src={DigUpButton} id=\"dig-up-icon\" alt=\"\" onClick={handleShow} />\n        </div>\n        <strong>\n          <p className=\"plant-profile-small-button-text\">Dig Up</p>\n        </strong>\n      </div>\n\n      <Modal show={show} onHide={handleClose} {...props} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Dig up your Sprout</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"plant-profile-small-button-container\">\n            <div id=\"modal-dig-up-button\">\n              <img src={DigUpButton} id=\"modal-dig-up-icon\" alt=\"\"/>\n            </div>\n          </div>\n          <p>\n            Do you want to dig up your sprout? It will be removed from your\n            garden.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Link to=\"/profile\">\n          <Button\n            variant=\"primary\"\n            onClick={handleSubmit}\n            className=\"custom-primary-button\"\n          >\n            Confirm\n          </Button>\n          </Link>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default DigUp;\n","export default __webpack_public_path__ + \"static/media/water_icon.658315d8.svg\";","// =====================================\n//               IMPORT\n// =====================================\n\n// React\nimport { React, useState, useContext } from \"react\";\nimport Axios from \"axios\";\n\n// Assets\nimport WaterButton from \"../../config/assets/icons/water_icon.svg\";\n\n// Bootstrap\nimport Modal from \"react-bootstrap/Modal\";\n\n// Styling\nimport \"./styles/PlantProfileSmallButtons.css\";\n\n// Sprout and User Context from Layout.js Provider\nimport { SproutContext, UserContext } from \"../../components/Layout/Layout\";\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return a component with modal popup which is triggered by the Water button\n * \n * @param {*} props - Bootstrap import\n * @returns Water component\n */\n\nconst WaterPlant = ({ props, sprout, updateLastWatered, waterDiffDays }) => {\n\n  // Context States\n  let user = useContext(UserContext)[0];\n  let [sprouts, setSprouts] = useContext(SproutContext);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const isWaterTime = () => {\n    if (waterDiffDays >= sprout.wateringInterval) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  \n  const wateringPlant = async () => {\n\n    if (!isWaterTime()) {\n      alert(\"It's not time to water your plant yet!\")\n    } else {\n      await Axios.put(`/api/plant-profile/${sprout.sproutId}`, {\n        userId: window.sessionStorage.getItem('userId')\n      })\n      .then(res => {\n\n        let newLastWateredDate = res.data.user_sprouts_last_watered;\n  \n        let newSproutWithLastWatered = {...sprout,\n          lastWatered: newLastWateredDate\n        };\n  \n        // Find the current sprout in SproutContext and update the sprout Object\n        let sproutIndex = sprouts.findIndex(\n          ({ sproutId }) => sproutId === sprout.sproutId\n        );\n        let updatedSprouts = [...sprouts];\n        updatedSprouts[sproutIndex] = newSproutWithLastWatered;\n  \n        updateLastWatered(newLastWateredDate);\n        setSprouts(updatedSprouts);\n        user.points = user.points + 10;\n      })\n      .catch(err => console.log(err))\n      .finally(handleShow());\n    }\n  }\n\n  return (\n    <>\n      <div className=\"plant-profile-small-button-container plant-profile-small-button-height-fix\">\n        <div id=\"dig-up-button\">\n          <img src={WaterButton} id=\"dig-up-icon\" onClick={wateringPlant} className=\"water-button\" alt=\"\"/>\n        </div>\n        <strong>\n          <p className=\"plant-profile-small-button-text\">Water</p>\n        </strong>\n      </div>\n\n      <Modal show={show} onHide={handleClose} {...props} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Water your Sprout</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"plant-profile-small-button-container\">\n            <div id=\"modal-dig-up-button\">\n              <img src={WaterButton} id=\"modal-dig-up-icon\" alt=\"\"/>\n            </div>\n          </div>\n          <p>\n            You have watered your sprout and earned 10 points. Hurray!\n          </p>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default WaterPlant;","// =====================================\n//               IMPORTS\n// =====================================\n\n// React\nimport React, { useState } from \"react\";\n\n// FS Lightbox - from https://fslightbox.com/react/documentation\nimport FsLightbox from \"fslightbox-react\"; \n\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Styles\nimport \"./styles/PlantProfilePicture.css\";\n\n/**\n * Return the Plant Profile component\n * \n * The image will lightbox, due to the incorporation of FS lightbox\n * \n * @param {String} imageUrl - string with the url of the image to be rendered\n * @returns the Plant Profile component\n */\n\nconst PlantProfilePicture = ({ imageUrl }) => {\n  const [toggler, setToggler] = useState(false);\n  return (\n    <>\n      <img src={imageUrl} id=\"plant-profile-picture\" className=\"shadow-sm\" alt=\"\" onClick={() => setToggler(!toggler)} />\n      <FsLightbox toggler={toggler} sources={[<img src={imageUrl} alt=\"\"/>]} />\n    </>\n  );\n};\n\nexport default PlantProfilePicture;\n","// =====================================\n//               IMPORT\n// =====================================\n\n// React\nimport React from \"react\";\n\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Styling\nimport \"./styles/PlantProfileTopOptions.css\";\n\n// Components\nimport DigUp from \"./DigUp\";\nimport WaterPlant from \"./WaterPlant\";\nimport PlantProfilePicture from \"./PlantProfilePicture\";\n\n\n\n// =====================================\n//          REACT COMPONENT\n// =====================================\n\n/**\n * Return the parent container object for the Plant Profile's top components\n * \n * Pass the image url prop down into the child Plant Profile Picture component\n * \n * @param {String} imageUrl - the url where the image of the plant is stored\n * @returns the parent container object for the Plant Profile's top components\n */\n\n const PlantProfileTopOptions = ({ sprout, updateLastWatered, waterDiffDays }) => {\n\n  return (\n    <>\n      <div id=\"plant-profile-top-container\">\n        <DigUp sprout={sprout}/>\n        <PlantProfilePicture imageUrl={sprout.imageUrl} />\n        <WaterPlant sprout={sprout} updateLastWatered={updateLastWatered} waterDiffDays={waterDiffDays}/>\n      </div>\n    </>\n  );\n};\n\nexport default PlantProfileTopOptions;","export default __webpack_public_path__ + \"static/media/seed.01500bdf.svg\";","// ====================================\n//            \tIMPORT\n// ====================================\n\n// React\nimport React from 'react';\n\n// Styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/PlantDateAdded.css';\n\n// Assets\nimport seed from '../../config/assets/icons/seed.svg';\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return the date added card of a given date specified.\n * @param {String} dateAdded - string, the date that the plant was added to the Database. \n * @returns - card component for date added.\n */\nconst PlantNotes = ({dateAdded}) => {\n\n    return (\n\n        <div id=\"plant-profile-dateAdded-card\">\n            <div className=\"plant-profile-info-card\">\n                <img src={seed} className=\"plant-profile-icon\" alt=\"leaf-icon\"></img>\n                <div className=\"plant-dateAdded-section\">\n                    <p className=\"plant-profile-subhead1 plant-profile-subhead\">Date Added</p>\n                    <p className=\"plant-profile-value1 plant-profile-value\">{dateAdded}</p>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default PlantNotes;","export default __webpack_public_path__ + \"static/media/pen.5090791c.svg\";","// ====================================\n//            \tIMPORT\n// ====================================\n\n// React\nimport { React, useState, useContext } from \"react\";\n\n// Axios\nimport Axios from \"axios\";\n\n// Assets\nimport EditButton from \"../../config/assets/icons/pen.svg\";\n\n//Bootstrap\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\n\n// Styling\nimport \"./styles/PlantProfileSmallButtons.css\";\n\n// Sprout and User Context from Layout.js Provider\nimport { SproutContext, UserContext } from \"../../components/Layout/Layout\";\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return the modal component of editing plants with form fields filled in with the plant's current information.\n * @param {Bootstrap} props - required parameter for Bootstrap modal to be vertically centered.\n * @param {Object} plant - the object representation of the current page's plant.\n * @returns - the edit modal of the current plant displayed on the page.\n */\nconst EditPlant = ({ props, sprout, updateSproutPage }) => {\n  // Get Auth User by UserContext and current sprouts by SproutContext\n  let authUser = useContext(UserContext)[0];\n  let [sprouts, setSprouts] = useContext(SproutContext);\n\n  // States for modal from react-bootstrap\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // Form states\n  const [inputSproutName, setSproutName] = useState(sprout[\"name\"]);\n  const [inputFamily, setFamily] = useState(sprout[\"family\"]);\n  const [inputType, setType] = useState(sprout[\"type\"]);\n  const [inputWateringInterval, setWateringInterval] = useState(\n    sprout[\"wateringInterval\"]\n  );\n  const [inputNotes, setNotes] = useState(sprout[\"notes\"]);\n  const [selectedSproutPic, setSelectedSproutPic] = useState(\n    sprout[\"imageUrl\"]\n  );\n\n  // Edit Sprout function upon form submission\n  const editSprout = async () => {\n    if (\n      document.getElementById(\"sproutName\").value !== \"\" &&\n      document.getElementById(\"sproutWateringInterval\").value !== \"\" &&\n      document.getElementById(\"sproutWateringInterval\").value > 0 &&\n      document.getElementById(\"sproutWateringInterval\").value % 1 === 0\n    ) {\n      // Upload image to Cloudinary database, code adapted from PedroTech\n      const imageData = new FormData();\n      imageData.append(\"file\", selectedSproutPic);\n      imageData.append(\"upload_preset\", \"sproutPlant\");\n      let uploadRes = await Axios.post(\n        \"https://api.cloudinary.com/v1_1/sprout03/image/upload/\",\n        imageData\n      );\n\n      // Put request to plant profile to update the plant\n      Axios.put(\"/api/plant-profile\", {\n        sproutId: sprout.sproutId,\n        name: inputSproutName,\n        family: inputFamily,\n        type: inputType,\n        wateringInterval: inputWateringInterval,\n        notes: inputNotes,\n        imageUrl: uploadRes.data.secure_url,\n      }).then((res) => {\n        // Create the updated sprout Object\n        let updatedSprout = {\n          ...sprout,\n          name: res.data.user_sprouts_given_name,\n          family: res.data.user_sprouts_family,\n          type: res.data.user_sprouts_type,\n          wateringInterval: res.data.user_sprouts_watering_intervals,\n          notes: res.data.user_sprouts_notes,\n          imageUrl: res.data.user_sprouts_image,\n        };\n\n        // Find the current sprout in SproutContext and update the sprout Object\n        let sproutIndex = sprouts.findIndex(\n          ({ sproutId }) => sproutId === sprout.sproutId\n        );\n        let updatedSprouts = [...sprouts];\n        updatedSprouts[sproutIndex] = updatedSprout;\n\n        // Change the states of the Sprout Profile Page and Sprout Context\n        updateSproutPage(updatedSprout);\n        setSprouts(updatedSprouts);\n        \n        // Close modal\n        handleClose();\n      });\n    } else {\n      alert(\n        \"You must fill out all the required fields, and watering interval must be an integer greater than 0.\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <img src={EditButton} id=\"edit-button\" onClick={handleShow} alt=\"\" />\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Sprout</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form.Group controlId=\"sproutName\">\n            <strong>\n              <p className=\"sprout-modal-text\">Name</p>\n            </strong>\n            <Form.Control\n              type=\"text\"\n              defaultValue={inputSproutName}\n              onChange={(e) => setSproutName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"sproutFamily\">\n            <strong>\n              <p className=\"sprout-modal-text\">Family</p>\n            </strong>\n            <Form.Control\n              type=\"text\"\n              defaultValue={inputFamily}\n              onChange={(e) => setFamily(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"sproutType\">\n            <strong>\n              <p className=\"sprout-modal-text\">Type</p>\n            </strong>\n            <Form.Control\n              type=\"text\"\n              defaultValue={inputType}\n              onChange={(e) => setType(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"sproutWateringInterval\">\n            <strong>\n              <p className=\"sprout-modal-text\">Watering Interval (days)</p>\n            </strong>\n            <Form.Control\n              type=\"number\"\n              defaultValue={inputWateringInterval}\n              onChange={(e) => setWateringInterval(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"sproutNotes\">\n            <strong>\n              <p className=\"sprout-modal-text\">Additional Notes</p>\n            </strong>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              defaultValue={inputNotes}\n              onChange={(e) => setNotes(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"sproutPicture\">\n            <strong>\n              <p className=\"sprout-modal-text\">Upload Sprout Picture</p>\n            </strong>\n            <Form.File\n              id=\"sproutUploadPicture\"\n              onChange={(e) => setSelectedSproutPic(e.target.files[0])}\n            />\n          </Form.Group>\n        </Modal.Body>\n\n        <Modal.Footer>\n            <Button\n              variant=\"primary\"\n              onClick={editSprout}\n              className=\"custom-primary-button\"\n            >\n              Save Changes\n            </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditPlant;\n","export default __webpack_public_path__ + \"static/media/back_button.2ebb743a.svg\";","// ====================================\n//            \tIMPORT\n// ====================================\n\n// React\nimport React, { useContext, useState, useEffect } from \"react\";\n\n// Components\nimport { Link, useParams } from \"react-router-dom\";\nimport PlantInfo from '../../components/PlantProfile/PlantInfo';\nimport PlantNotes from \"../../components/PlantProfile/PlantNotes\";\nimport PlantProfileTopOptions from \"../../components/PlantProfile/PlantProfileTopOptions\";\nimport PlantDateAdded from '../../components/PlantProfile/PlantDateAdded';\nimport EditPlant from '../../components/PlantProfile/EditPlant';\n\n// Styles\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./PlantProfile.css\";\n\n// Assets\nimport BackButton from \"../../config/assets/icons/back_button.svg\";\n\n// Sprout and User Context from Layout.js Provider\nimport { SproutContext } from \"../../components/Layout/Layout\";\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return the components of the Plant Profile Page.\n * @returns - the components of the Plant Profile Page.\n */\nconst PlantProfilePage = () => {\n\n  // Get the user's sprouts\n  let sprouts = useContext(SproutContext)[0];\n\n  // Retreve the correct sprout information based on the request parameter\n  let sproutParam = parseInt(useParams().sproutId);\n  let currSprout = sprouts.filter(sprout => sprout.sproutId === sproutParam)[0];\n\n  // Declare state of current sprout\n  const [thisSprout, setThisSprout] = useState(currSprout);\n\n  // Set last watered date\n  const [lastWatered, setLastWatered] = useState(null);\n  const [diffDays, setDiffDays] = useState();\n\n  // Fetch data on mount of the components/page\n  useEffect(() => {\n    getLastWateredDate(currSprout.lastWatered);\n  }, []);\n\n\n  // Calculate the different in days from last watered to current date\n  let getDiffDay = date => {\n    if (!date) {\n      return -1;\n    } else {\n      // Code snippet below adapted from Abhilash Kakumanu, Stack Abuse \n      //https://stackabuse.com/javascript-get-number-of-days-between-dates/\n      \n      let today = new Date();\n      let lastWateredDate = new Date(date);\n\n      // One day in milliseconds\n      const oneDay = 1000 * 60 * 60 * 24;\n\n      // Calculating the time difference between two dates\n      const diffInTime = today.getTime() - lastWateredDate.getTime();\n\n      // Calculating the no. of days between two dates\n      const diffInDays = Math.round(diffInTime / oneDay);\n\n      return diffInDays;\n    }\n  }\n\n  // Get last watered and set the last watered date\n  let getLastWateredDate = date => {\n\n    let diffInDays = getDiffDay(date);\n    setDiffDays(diffInDays);\n\n    if (diffInDays === 1 || diffInDays === 0) {\n      setLastWatered(`recently`)\n    } else if (diffInDays === -1) {\n      setLastWatered(\"N/A\")\n    } else {\n      setLastWatered(`${diffInDays} days ago`)\n    }\n  }\n\n  return (\n    <div id=\"container\">\n      <div className=\"header_backarrow_container\">\n        <Link to=\"/profile\">\n          <img src={BackButton} className=\"back-button\" alt=\"\" />\n        </Link>\n        <h1 id=\"plant-profile-h1\">{thisSprout[\"name\"]}</h1>\n        <EditPlant sprout={thisSprout} updateSproutPage={setThisSprout}/>\n      </div>\n      <hr />\n      <PlantProfileTopOptions sprout={thisSprout} updateLastWatered={getLastWateredDate} waterDiffDays={diffDays}/>\n      <PlantInfo plant={thisSprout} wateredDate={lastWatered}/>\n      <PlantDateAdded dateAdded={thisSprout[\"dateAdded\"].substring(0, 10)}/>\n      <PlantNotes plantNotes={thisSprout[\"notes\"]}/>\n\n      <div id=\"plant-profile-nav-block\"></div>\n\n    </div>\n  );\n};\n\nexport default PlantProfilePage;","import PlantProfileContainer from './PlantProfileContainer';\n\nexport default PlantProfileContainer;\n","import React from 'react';\nimport PlantProfile from './PlantProfilePage'\n\nconst PlantProfileContainer = () => {\n  return <PlantProfile />\n}\n\nexport default PlantProfileContainer;","// ====================================\n//            IMPORTS\n// ====================================\n\n// React\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\n\n// Styles\nimport \"./styles/SearchItem.css\";\n\n/**\n * Return the Search Items components\n * Takes the plant info and maps it to a search item card\n * Will only render the native plant pill if the plant is a native plant of BC\n * @param {Array} plantData: array of the plant information\n * @returns Search Items components\n */\n\nconst SearchItem = ({ plantData }) => {\n\n  // Convert plant's name to titlecase\n  const titleCase = (title) => title.charAt(0).toUpperCase() + title.slice(1);\n\n  // Map the plant data to a component with conditional rendering for the \"Native Plant\" pill\n\n  return plantData.map((plant) => (\n\n    <Link to={`/search-details/${plant.PLANT_ID}`} key={plant[\"PLANT_ID\"]}>\n      <div className=\"plant-search-item\">\n        <img\n          src={plant[\"PLANT_IMG_URL\"]}\n          className=\"plant-search-img\"\n          alt=\"plant-search-img\"\n        />\n        <div className=\"plant-search-name-div\">\n          <strong>\n            <p className=\"plant-search-name\">\n              {titleCase(plant[\"PLANT_COMMON_NAME\"].split(\", \")[0])}\n            </p>\n          </strong>\n          <div className=\"plant-search-familytype\">\n            <p className=\"plant-search-family\">\n              <strong>Family: </strong>\n              {plant[\"PLANT_FAMILY_NAME\"]}\n            </p>\n            <p className=\"plant-search-type\">\n              <strong>Type: </strong>\n              {plant[\"PLANT_TYPE\"]}\n            </p>\n\n            {plant[\"PLANT_ORIGIN\"] != null && plant[\"PLANT_ORIGIN\"].includes(\"B.C\") && (\n              <p className=\"is-native\" id={\"plant\" + plant[\"PLANT_ID\"]}>\n                Native\n              </p>\n            )}\n\n            {plant[\"PLANT_BEE_FRIENDLY\"] && (\n              <p className=\"bee-friendly\" id={\"plant\" + plant[\"PLANT_ID\"]}>\n                Bee-Friendly\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </Link>\n  ));\n};\n\nexport default SearchItem;\n","// ====================================\n//            \tIMPORT\n// ====================================\n\n// React\nimport React from \"react\";\n\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"react-bootstrap/Form\"\n\n// Styling\nimport './styles/SearchBar.css';\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return the Search Bar component\n * @param {} inputKeyword - the currently typed input\n * @param {} updateInputKeyword - function to update the filtered list and current inputKeyword\n * @returns Search Bar component\n */\nconst SearchBar = ({inputKeyword, updateInputKeyword}) => \n\n    <Form.Control \n    type=\"text\" \n    placeholder=\"Search Plants ...\"\n    value={inputKeyword}\n    onChange= {event => updateInputKeyword(event.target.value)}/>; // event.target is the input node/ event.target.value is value attribute of the node\n\nexport default SearchBar;","// =====================================\n//               IMPORTS\n// =====================================\n\n// React\nimport React from \"react\";\n\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Styling\nimport './styles/NoResults.css';\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\nconst NoResults = () => {\n    return (\n        <div id=\"found-none-div\" className=\"text-muted\">\n\n            <h5>No Matching Plants Found</h5>\n\n            <h6>Suggest a New Plant</h6> \n            <p>Add your plant from My Sprouts and submit a request by finding us in our About Us page if you'd like to see a plant added to our database</p>\n        </div>\n    )\n}\n\nexport default NoResults;","// =====================================\n//               IMPORTS\n// =====================================\n\n// React\nimport React, { useState } from \"react\";\n\n// Bootsrap\nimport \"bootstrap/dist/css/bootstrap.min.css\"; \n\n// Styling\nimport './Search.css'\n\n// Components\nimport SearchItem from \"../../components/Search/SearchItems\";\nimport SearchBar from \"../../components/Search/SearchBar\";\nimport NoResults from \"../../components/Search/NoResults\";\n\n// Data (Temp)\nimport searchPlantData from \"../../config/data/plants_with_bees.json\";\n\n\n\n// ====================================\n//           REACT COMPONENT\n// ====================================\n\n/**\n * Return components of the Search Page.\n * \n * Search useState and updateInput code adapted from @pradityadhitama from Medium.\n * \n * @returns - components of the Search Page.\n */\nconst SearchPage = () => {\n\n  // State to track the search input changes as user types. Default empty string\n  const [input, setInput] = useState('')\n\n  // State to track the filtered plant list. Default imported plant database\n  const [plantList, setPlantList] = useState(searchPlantData);\n\n\n  // Function to update the input in the search bar and the filtered plant list based on current input\n  const updateInput = input => {\n\n    const filterList = searchPlantData.filter(plant => {   // filter through the default plant list\n      return plant.PLANT_COMMON_NAME.toLowerCase().includes(input.toLowerCase())  // return only plants w/ common name including input\n    })\n\n    setInput(input);            // make sure input is updated in search bar to current input string\n    setPlantList(filterList);   // update the current plant list displayed to the new filtered list\n  }\n\n  \n  return (\n    <div id=\"container\">\n      <div id=\"profile-header\">\n        <h1 id=\"search-h1\">Search</h1>\n      </div>\n\n      <hr/>\n\n      <SearchBar input_keyword={input} updateInputKeyword={updateInput}/>\n      <div id=\"search-items-container\">\n\n      {plantList.length === 0 && <NoResults/>}\n      <SearchItem plantData={plantList} />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPage from './SearchPage'\n\nconst SearchContainer = () => {\n  return <SearchPage />\n}\n\nexport default SearchContainer;","export default __webpack_public_path__ + \"static/media/star.f8b86ae9.svg\";","export default __webpack_public_path__ + \"static/media/flower.25439b4a.svg\";","export default __webpack_public_path__ + \"static/media/fruit.1598fed6.svg\";","// ======================================\n//               Import\n// ======================================\n\n// React\nimport React from \"react\";\n\n// Assets\nimport leaf from '../../config/assets/icons/big-leaf.svg';\nimport watercan from '../../config/assets/icons/water-can-slim.svg';\nimport star from '../../config/assets/icons/star.svg';\nimport flower from '../../config/assets/icons/flower.svg';\nimport fruit from '../../config/assets/icons/fruit.svg';\n\n// Styling\nimport './styles/DetailCards.css'\n\n\n// ======================================\n//            React Component\n// ======================================\n\nconst DetailCards = ({ plantInfo }) => {\n\n  /**\n   * Title case a given string.\n   * @param {String} title - a string, the title\n   * @returns - a string title-cased\n   */\n  const titleCase = (title) => title.charAt(0).toUpperCase() + title.slice(1);\n\n  return (\n    <div id=\"detail-cards-container\">\n      <div id=\"plant-profile-dateAdded-card\">\n        <div className=\"plant-profile-info-card\">\n          <img src={star} className=\"plant-profile-icon\" alt=\"leaf-icon\"></img>\n          <div className=\"plant-dateAdded-section\">\n            <p className=\"plant-profile-subhead1 plant-profile-subhead\">\n              Common Names\n            </p>\n            <p className=\"plant-profile-value1 plant-profile-value\">\n              {titleCase(plantInfo[\"PLANT_COMMON_NAME\"])}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"plant-profile-card\">\n        <div className=\"plant-profile-info-card\">\n          <img src={leaf} className=\"plant-profile-icon\" alt=\"leaf-icon\"></img>\n          <div className=\"plant-profile-info-section\">\n            <p className=\"plant-profile-subhead1 plant-profile-subhead\">\n              Family\n            </p>\n            <p className=\"plant-profile-value1 plant-profile-value\">\n              {plantInfo[\"PLANT_FAMILY_NAME\"]}\n            </p>\n\n            <p className=\"plant-profile-subhead2 plant-profile-subhead\">Type</p>\n            <p className=\"plant-profile-value2 plant-profile-value\">\n              {plantInfo[\"PLANT_TYPE\"]}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"plant-profile-card\">\n        <div className=\"plant-profile-info-card\">\n          <img src={watercan} className=\"plant-profile-icon\" alt=\"leaf-icon\"></img>\n          <div className=\"plant-profile-info-section\">\n            <p className=\"plant-profile-subhead1 plant-profile-subhead\">Soil</p>\n            <p className=\"plant-profile-value1 plant-profile-value\">\n              {plantInfo[\"PLANT_SOIL\"]}\n            </p>\n\n            <p className=\"plant-profile-subhead2 plant-profile-subhead\">\n              Water Use\n            </p>\n            <p className=\"plant-profile-value2 plant-profile-value\">\n              {plantInfo[\"PLANT_WATER_USE\"]}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"plant-profile-card\">\n        <div className=\"plant-profile-info-card\">\n          <img src={flower} className=\"plant-profile-icon\" alt=\"leaf-icon\"></img>\n          <div className=\"plant-profile-info-section\">\n            <p className=\"plant-profile-subhead1 plant-profile-subhead\">\n              Flowering Time\n            </p>\n            <p className=\"plant-profile-value1 plant-profile-value\">\n              {plantInfo[\"PLANT_FLOWER_TIME_AT_PEAK\"]}\n            </p>\n\n            <p className=\"plant-profile-subhead2 plant-profile-subhead\">\n              Flower Color\n            </p>\n            <p className=\"plant-profile-value2 plant-profile-value\">\n              {plantInfo[\"PLANT_FLOWER_COLOR\"]}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"plant-profile-dateAdded-card\">\n        <div className=\"plant-profile-info-card\">\n          <img src={fruit} className=\"plant-profile-icon\" alt=\"leaf-icon\"></img>\n          <div className=\"plant-dateAdded-section\">\n            <p className=\"plant-profile-subhead1 plant-profile-subhead\">\n              Fruiting Time\n            </p>\n            <p className=\"plant-profile-value1 plant-profile-value\">\n              {plantInfo[\"PLANT_FRUIT_TIME\"]}\n            </p>\n          </div>\n          \n        </div>\n        <p id=\"reference\">Kwantlen Polytechnic University, School of Horticulture (2015).</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DetailCards;\n","// ======================================\n//               Import\n// ======================================\n\n// React\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\n// Components\nimport plantData from '../../config/data/plants_with_bees.json';\nimport DetailCards from '../../components/SearchPlantDetail/DetailCards'\nimport AddPlantModal from '../../components/Modals/AddPlantModal';\n\n// Assets\nimport backbutton from '../../config/assets/icons/back_button.svg';\n\n\n// ======================================\n//            React Component\n// ======================================\n\n/**\n * Return the components for Search Details page.\n * @returns - the components for Search Details page.\n */\nconst SearchPlantDetailPage = () => {\n\n  let plantId = parseInt(useParams().plantId);\n\n  let thisPlant = plantData.filter( plant => plant.PLANT_ID === plantId )[0]\n  \n\n  /**\n   * Return the plant's first common name capitalized.\n   * @param {*} plant - a plant object\n   * @returns - a string, the plant's first common name capitalized.\n   */\n  const firstCommonName = (plant) => {\n    let firstName = plant.PLANT_COMMON_NAME.split(',')[0];\n    return firstName.charAt(0).toUpperCase() + firstName.slice(1);\n  }\n\n  return (\n\n  <div id=\"container\">\n\n    <div id=\"header_backarrow_container\">\n      <Link to=\"/search\">\n          <img src={backbutton} className=\"back-button\" alt=\"\" />\n      </Link>\n      <h1 id=\"profile-h1\">{firstCommonName(thisPlant)}</h1>\n      <AddPlantModal type={thisPlant['PLANT_TYPE']} family={thisPlant['PLANT_FAMILY_NAME']}/>\n    </div>\n\n    <hr />\n\n    <div id=\"search-details-img-container\">\n    <img id=\"search-details-img\" src={thisPlant['PLANT_IMG_URL']} alt=\"\"></img>\n    </div>\n\n    <DetailCards plantInfo={thisPlant}/>\n\n  </div>);\n};\n\nexport default SearchPlantDetailPage;\n","import SearchPlantDetailContainer from './SearchPlantDetailContainer';\n\nexport default SearchPlantDetailContainer;","import React from 'react';\nimport SearchPlantDetailPage from './SearchPlantDetailPage'\n\nconst SearchPlantDetailContainer = () => {\n  return <SearchPlantDetailPage />;\n}\n\nexport default SearchPlantDetailContainer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/Corgiswimflipflip.f8229235.jpg\";","export default __webpack_public_path__ + \"static/media/bork_bork_nom_nom.ef0d7803.gif\";","import React from 'react';\nimport corgiStill from '../../config/assets/images/Corgiswimflipflip.jpg'\nimport corgi from '../../config/assets/images/bork_bork_nom_nom.gif'\nimport './Easter.css';\nimport { Link } from 'react-router-dom';\n\nconst EasterEgg = () => {\n  return (\n    <Link to=\"/about-us\">\n    <div id='guichonRiver'>\n      <div className=\"corgiFly\">\n        <img src={corgi} alt={corgiStill} />\n      </div>\n    </div>\n    </Link>\n  )\n};\n\nexport default EasterEgg;","/*================== IMPORTS ===================== */\n\n// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Components\nimport Layout from './components/Layout/Layout';\nimport AboutUsContainer from './containers/AboutUs';\nimport AlertsContainer from './containers/Alerts';\nimport LeaderboardContainer from './containers/Leaderboards';\nimport LoginContainer from './containers/Login';\nimport SignupContainer from './containers/Signup';\nimport JoinTeamContainer from './containers/JoinTeam';\nimport ProfileContainer from './containers/Profile';\nimport PlantProfileContainer from './containers/PlantProfile';\nimport SearchContainer from './containers/Search';\nimport SearchPlantDetailContainer from './containers/SearchPlantDetail'\n\n// Web Vitals and Styling\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport EasterEgg from './components/Easter/EasterEgg';\n// import reducer from './components/Layout/GlobalReducer';\n\n/*================== APP PATHS AND RENDER ===================== */\n\n/**\n * Associate the application's paths to specified components for rendering.\n * \n * @returns - the routing for Sprout application\n */\nconst App = () => {\n  return (\n      <Router>\n        <Switch>\n          <Layout>\n            {/* {user === userInitialValue ?\n            <Route path='/*' component={LoginContainer} />\n            :  */}\n            <>\n              <Route path='/about-us' component={AboutUsContainer} />\n              <Route path='/alerts' component={AlertsContainer} />\n              <Route path='/join-team' component={JoinTeamContainer} />\n              <Route path='/leaderboards' component={LeaderboardContainer} />\n              <Route exact path='/' component={LoginContainer} />\n              <Route exact path='/signup' component={SignupContainer} />\n              <Route path='/profile' component={ProfileContainer} />\n              <Route path='/search' component={SearchContainer} />\n              <Route path='/search-details/:plantId' component={SearchPlantDetailContainer} />\n              <Route path='/plant-profile/:sproutId' component={PlantProfileContainer} />\n              <Route path='/asdfasdfasdfasdfsadfsafdasdf' component={EasterEgg} />\n            </>\n            {/* } */}\n          </Layout>\n        </Switch>\n      </Router>\n  );\n};\n\n/**\n * Display specified path inside element at 'root'.\n */\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}